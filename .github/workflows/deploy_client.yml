name: Flutter CI/CD

on:
  push:
    branches: [main]
    

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # ----------------------
      # 1. Подготовка
      # ----------------------
      - name: 🏗 Checkout code
        uses: actions/checkout@v4

      - name: 🛠 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ hashFiles('frontend/pubspec.lock') }}

      # ----------------------
      # 2. Тесты и проверки
      # ----------------------
      - name: 📦 Install dependencies
        run: cd frontend && flutter pub get

      - name: 🧪 Run unit tests
        run: cd frontend && flutter test

      - name: 🔍 Static analysis
        run: cd frontend && flutter analyze

      - name: 🖌 Check formatting
        run: cd frontend && dart format --set-exit-if-changed .

      - name: � Run widget tests
        run: cd frontend && flutter test test/widget_test.dart

      # ----------------------
      # 3. Сборка и деплой
      # ----------------------
      - name: 🏭 Build web release
        run: cd frontend && flutter build web --release --no-tree-shake-icons
        if: success()  # Только если все тесты пройдены

      - name: 📱 Build APK
        run: cd frontend && flutter build apk --release
        if: success()

      - name: 📤 Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: frontend/build/app/outputs/flutter-apk/app-release.apk
        if: success()

      - name: 🚀 Deploy to Firebase
        uses: w9jds/firebase-action@v2
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        if: success() && github.ref == 'refs/heads/main'  # Деплой только из main
